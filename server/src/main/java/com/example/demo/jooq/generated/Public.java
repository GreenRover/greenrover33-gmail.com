/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooq.generated;


import com.example.demo.jooq.generated.tables.Car;
import com.example.demo.jooq.generated.tables.Coaster;
import com.example.demo.jooq.generated.tables.Design;
import com.example.demo.jooq.generated.tables.Location;
import com.example.demo.jooq.generated.tables.Status;
import com.example.demo.jooq.generated.tables.Typ;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -871010249;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.car</code>.
     */
    public final Car CAR = Car.CAR;

    /**
     * The table <code>public.coaster</code>.
     */
    public final Coaster COASTER = Coaster.COASTER;

    /**
     * The table <code>public.design</code>.
     */
    public final Design DESIGN = Design.DESIGN;

    /**
     * The table <code>public.location</code>.
     */
    public final Location LOCATION = Location.LOCATION;

    /**
     * The table <code>public.status</code>.
     */
    public final Status STATUS = Status.STATUS;

    /**
     * The table <code>public.typ</code>.
     */
    public final Typ TYP = Typ.TYP;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.HIBERNATE_SEQUENCE);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Car.CAR,
            Coaster.COASTER,
            Design.DESIGN,
            Location.LOCATION,
            Status.STATUS,
            Typ.TYP);
    }
}
