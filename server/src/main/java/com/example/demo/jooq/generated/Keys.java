/*
 * This file is generated by jOOQ.
 */
package com.example.demo.jooq.generated;


import com.example.demo.jooq.generated.tables.Car;
import com.example.demo.jooq.generated.tables.Coaster;
import com.example.demo.jooq.generated.tables.Design;
import com.example.demo.jooq.generated.tables.Location;
import com.example.demo.jooq.generated.tables.Status;
import com.example.demo.jooq.generated.tables.Typ;
import com.example.demo.jooq.generated.tables.records.CarRecord;
import com.example.demo.jooq.generated.tables.records.CoasterRecord;
import com.example.demo.jooq.generated.tables.records.DesignRecord;
import com.example.demo.jooq.generated.tables.records.LocationRecord;
import com.example.demo.jooq.generated.tables.records.StatusRecord;
import com.example.demo.jooq.generated.tables.records.TypRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CarRecord> CAR_PKEY = UniqueKeys0.CAR_PKEY;
    public static final UniqueKey<CoasterRecord> COASTER_PKEY = UniqueKeys0.COASTER_PKEY;
    public static final UniqueKey<DesignRecord> DESIGN_PKEY = UniqueKeys0.DESIGN_PKEY;
    public static final UniqueKey<LocationRecord> LOCATION_PKEY = UniqueKeys0.LOCATION_PKEY;
    public static final UniqueKey<StatusRecord> STATUS_PKEY = UniqueKeys0.STATUS_PKEY;
    public static final UniqueKey<TypRecord> TYP_PKEY = UniqueKeys0.TYP_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CoasterRecord, DesignRecord> COASTER__FK1Q6NXOU9SJXH312DOQ4TAR7ID = ForeignKeys0.COASTER__FK1Q6NXOU9SJXH312DOQ4TAR7ID;
    public static final ForeignKey<CoasterRecord, LocationRecord> COASTER__FKJ3U6TV539DHS9SLEQHR4MNHI0 = ForeignKeys0.COASTER__FKJ3U6TV539DHS9SLEQHR4MNHI0;
    public static final ForeignKey<CoasterRecord, StatusRecord> COASTER__FKL17SL3GK030X9WIKYO8A1EMH5 = ForeignKeys0.COASTER__FKL17SL3GK030X9WIKYO8A1EMH5;
    public static final ForeignKey<CoasterRecord, TypRecord> COASTER__FKDAFMKN0H2PY7CAB468JA02R2R = ForeignKeys0.COASTER__FKDAFMKN0H2PY7CAB468JA02R2R;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<CarRecord> CAR_PKEY = Internal.createUniqueKey(Car.CAR, "car_pkey", new TableField[] { Car.CAR.ID }, true);
        public static final UniqueKey<CoasterRecord> COASTER_PKEY = Internal.createUniqueKey(Coaster.COASTER, "coaster_pkey", new TableField[] { Coaster.COASTER.ID }, true);
        public static final UniqueKey<DesignRecord> DESIGN_PKEY = Internal.createUniqueKey(Design.DESIGN, "design_pkey", new TableField[] { Design.DESIGN.ID }, true);
        public static final UniqueKey<LocationRecord> LOCATION_PKEY = Internal.createUniqueKey(Location.LOCATION, "location_pkey", new TableField[] { Location.LOCATION.ID }, true);
        public static final UniqueKey<StatusRecord> STATUS_PKEY = Internal.createUniqueKey(Status.STATUS, "status_pkey", new TableField[] { Status.STATUS.ID }, true);
        public static final UniqueKey<TypRecord> TYP_PKEY = Internal.createUniqueKey(Typ.TYP, "typ_pkey", new TableField[] { Typ.TYP.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CoasterRecord, DesignRecord> COASTER__FK1Q6NXOU9SJXH312DOQ4TAR7ID = Internal.createForeignKey(Keys.DESIGN_PKEY, Coaster.COASTER, "fk1q6nxou9sjxh312doq4tar7id", new TableField[] { Coaster.COASTER.DESIGN_ID }, true);
        public static final ForeignKey<CoasterRecord, LocationRecord> COASTER__FKJ3U6TV539DHS9SLEQHR4MNHI0 = Internal.createForeignKey(Keys.LOCATION_PKEY, Coaster.COASTER, "fkj3u6tv539dhs9sleqhr4mnhi0", new TableField[] { Coaster.COASTER.LOCATION_ID }, true);
        public static final ForeignKey<CoasterRecord, StatusRecord> COASTER__FKL17SL3GK030X9WIKYO8A1EMH5 = Internal.createForeignKey(Keys.STATUS_PKEY, Coaster.COASTER, "fkl17sl3gk030x9wikyo8a1emh5", new TableField[] { Coaster.COASTER.STATUS_ID }, true);
        public static final ForeignKey<CoasterRecord, TypRecord> COASTER__FKDAFMKN0H2PY7CAB468JA02R2R = Internal.createForeignKey(Keys.TYP_PKEY, Coaster.COASTER, "fkdafmkn0h2py7cab468ja02r2r", new TableField[] { Coaster.COASTER.TYP_ID }, true);
    }
}
